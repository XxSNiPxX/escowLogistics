// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: logisticsbeta/logisticsbeta/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

type MsgCreateVendor struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Offchainid string `protobuf:"bytes,3,opt,name=offchainid,proto3" json:"offchainid,omitempty"`
}

func (m *MsgCreateVendor) Reset()         { *m = MsgCreateVendor{} }
func (m *MsgCreateVendor) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVendor) ProtoMessage()    {}
func (*MsgCreateVendor) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{2}
}
func (m *MsgCreateVendor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVendor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVendor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVendor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVendor.Merge(m, src)
}
func (m *MsgCreateVendor) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVendor) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVendor.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVendor proto.InternalMessageInfo

func (m *MsgCreateVendor) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateVendor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateVendor) GetOffchainid() string {
	if m != nil {
		return m.Offchainid
	}
	return ""
}

type MsgCreateVendorResponse struct {
	VendorIndex string `protobuf:"bytes,1,opt,name=vendorIndex,proto3" json:"vendorIndex,omitempty"`
}

func (m *MsgCreateVendorResponse) Reset()         { *m = MsgCreateVendorResponse{} }
func (m *MsgCreateVendorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVendorResponse) ProtoMessage()    {}
func (*MsgCreateVendorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{3}
}
func (m *MsgCreateVendorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVendorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVendorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVendorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVendorResponse.Merge(m, src)
}
func (m *MsgCreateVendorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVendorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVendorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVendorResponse proto.InternalMessageInfo

func (m *MsgCreateVendorResponse) GetVendorIndex() string {
	if m != nil {
		return m.VendorIndex
	}
	return ""
}

type MsgCreatePurchaser struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Offchainid string `protobuf:"bytes,2,opt,name=offchainid,proto3" json:"offchainid,omitempty"`
}

func (m *MsgCreatePurchaser) Reset()         { *m = MsgCreatePurchaser{} }
func (m *MsgCreatePurchaser) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePurchaser) ProtoMessage()    {}
func (*MsgCreatePurchaser) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{4}
}
func (m *MsgCreatePurchaser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePurchaser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePurchaser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePurchaser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePurchaser.Merge(m, src)
}
func (m *MsgCreatePurchaser) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePurchaser) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePurchaser.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePurchaser proto.InternalMessageInfo

func (m *MsgCreatePurchaser) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePurchaser) GetOffchainid() string {
	if m != nil {
		return m.Offchainid
	}
	return ""
}

type MsgCreatePurchaserResponse struct {
	PurchaserIndex string `protobuf:"bytes,1,opt,name=purchaserIndex,proto3" json:"purchaserIndex,omitempty"`
}

func (m *MsgCreatePurchaserResponse) Reset()         { *m = MsgCreatePurchaserResponse{} }
func (m *MsgCreatePurchaserResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePurchaserResponse) ProtoMessage()    {}
func (*MsgCreatePurchaserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{5}
}
func (m *MsgCreatePurchaserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePurchaserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePurchaserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePurchaserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePurchaserResponse.Merge(m, src)
}
func (m *MsgCreatePurchaserResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePurchaserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePurchaserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePurchaserResponse proto.InternalMessageInfo

func (m *MsgCreatePurchaserResponse) GetPurchaserIndex() string {
	if m != nil {
		return m.PurchaserIndex
	}
	return ""
}

type MsgCreateTransporter struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Offchainid string `protobuf:"bytes,2,opt,name=offchainid,proto3" json:"offchainid,omitempty"`
}

func (m *MsgCreateTransporter) Reset()         { *m = MsgCreateTransporter{} }
func (m *MsgCreateTransporter) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransporter) ProtoMessage()    {}
func (*MsgCreateTransporter) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{6}
}
func (m *MsgCreateTransporter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransporter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransporter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransporter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransporter.Merge(m, src)
}
func (m *MsgCreateTransporter) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransporter) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransporter.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransporter proto.InternalMessageInfo

func (m *MsgCreateTransporter) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTransporter) GetOffchainid() string {
	if m != nil {
		return m.Offchainid
	}
	return ""
}

type MsgCreateTransporterResponse struct {
	TransporterIndex string `protobuf:"bytes,1,opt,name=transporterIndex,proto3" json:"transporterIndex,omitempty"`
}

func (m *MsgCreateTransporterResponse) Reset()         { *m = MsgCreateTransporterResponse{} }
func (m *MsgCreateTransporterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransporterResponse) ProtoMessage()    {}
func (*MsgCreateTransporterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{7}
}
func (m *MsgCreateTransporterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransporterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransporterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransporterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransporterResponse.Merge(m, src)
}
func (m *MsgCreateTransporterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransporterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransporterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransporterResponse proto.InternalMessageInfo

func (m *MsgCreateTransporterResponse) GetTransporterIndex() string {
	if m != nil {
		return m.TransporterIndex
	}
	return ""
}

type MsgCreateTrade struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Purchaserid       uint64 `protobuf:"varint,2,opt,name=purchaserid,proto3" json:"purchaserid,omitempty"`
	Vendorid          uint64 `protobuf:"varint,3,opt,name=vendorid,proto3" json:"vendorid,omitempty"`
	Commodity         string `protobuf:"bytes,4,opt,name=commodity,proto3" json:"commodity,omitempty"`
	Purchaserlocation string `protobuf:"bytes,5,opt,name=purchaserlocation,proto3" json:"purchaserlocation,omitempty"`
	Vendorlocation    string `protobuf:"bytes,6,opt,name=vendorlocation,proto3" json:"vendorlocation,omitempty"`
	Commodityprice    uint64 `protobuf:"varint,7,opt,name=commodityprice,proto3" json:"commodityprice,omitempty"`
	Transportprice    uint64 `protobuf:"varint,8,opt,name=transportprice,proto3" json:"transportprice,omitempty"`
}

func (m *MsgCreateTrade) Reset()         { *m = MsgCreateTrade{} }
func (m *MsgCreateTrade) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTrade) ProtoMessage()    {}
func (*MsgCreateTrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{8}
}
func (m *MsgCreateTrade) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTrade.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTrade.Merge(m, src)
}
func (m *MsgCreateTrade) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTrade) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTrade.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTrade proto.InternalMessageInfo

func (m *MsgCreateTrade) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTrade) GetPurchaserid() uint64 {
	if m != nil {
		return m.Purchaserid
	}
	return 0
}

func (m *MsgCreateTrade) GetVendorid() uint64 {
	if m != nil {
		return m.Vendorid
	}
	return 0
}

func (m *MsgCreateTrade) GetCommodity() string {
	if m != nil {
		return m.Commodity
	}
	return ""
}

func (m *MsgCreateTrade) GetPurchaserlocation() string {
	if m != nil {
		return m.Purchaserlocation
	}
	return ""
}

func (m *MsgCreateTrade) GetVendorlocation() string {
	if m != nil {
		return m.Vendorlocation
	}
	return ""
}

func (m *MsgCreateTrade) GetCommodityprice() uint64 {
	if m != nil {
		return m.Commodityprice
	}
	return 0
}

func (m *MsgCreateTrade) GetTransportprice() uint64 {
	if m != nil {
		return m.Transportprice
	}
	return 0
}

type MsgCreateTradeResponse struct {
	TradeIndex string `protobuf:"bytes,1,opt,name=tradeIndex,proto3" json:"tradeIndex,omitempty"`
}

func (m *MsgCreateTradeResponse) Reset()         { *m = MsgCreateTradeResponse{} }
func (m *MsgCreateTradeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTradeResponse) ProtoMessage()    {}
func (*MsgCreateTradeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{9}
}
func (m *MsgCreateTradeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTradeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTradeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTradeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTradeResponse.Merge(m, src)
}
func (m *MsgCreateTradeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTradeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTradeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTradeResponse proto.InternalMessageInfo

func (m *MsgCreateTradeResponse) GetTradeIndex() string {
	if m != nil {
		return m.TradeIndex
	}
	return ""
}

type MsgCreateVendorTradeAccept struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Tradeid uint64 `protobuf:"varint,2,opt,name=tradeid,proto3" json:"tradeid,omitempty"`
}

func (m *MsgCreateVendorTradeAccept) Reset()         { *m = MsgCreateVendorTradeAccept{} }
func (m *MsgCreateVendorTradeAccept) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVendorTradeAccept) ProtoMessage()    {}
func (*MsgCreateVendorTradeAccept) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{10}
}
func (m *MsgCreateVendorTradeAccept) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVendorTradeAccept) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVendorTradeAccept.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVendorTradeAccept) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVendorTradeAccept.Merge(m, src)
}
func (m *MsgCreateVendorTradeAccept) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVendorTradeAccept) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVendorTradeAccept.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVendorTradeAccept proto.InternalMessageInfo

func (m *MsgCreateVendorTradeAccept) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateVendorTradeAccept) GetTradeid() uint64 {
	if m != nil {
		return m.Tradeid
	}
	return 0
}

type MsgCreateVendorTradeAcceptResponse struct {
	TradeIndex string `protobuf:"bytes,1,opt,name=tradeIndex,proto3" json:"tradeIndex,omitempty"`
}

func (m *MsgCreateVendorTradeAcceptResponse) Reset()         { *m = MsgCreateVendorTradeAcceptResponse{} }
func (m *MsgCreateVendorTradeAcceptResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVendorTradeAcceptResponse) ProtoMessage()    {}
func (*MsgCreateVendorTradeAcceptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{11}
}
func (m *MsgCreateVendorTradeAcceptResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVendorTradeAcceptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVendorTradeAcceptResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVendorTradeAcceptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVendorTradeAcceptResponse.Merge(m, src)
}
func (m *MsgCreateVendorTradeAcceptResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVendorTradeAcceptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVendorTradeAcceptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVendorTradeAcceptResponse proto.InternalMessageInfo

func (m *MsgCreateVendorTradeAcceptResponse) GetTradeIndex() string {
	if m != nil {
		return m.TradeIndex
	}
	return ""
}

type MsgCreateVendorTradeReject struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Tradeid uint64 `protobuf:"varint,2,opt,name=tradeid,proto3" json:"tradeid,omitempty"`
}

func (m *MsgCreateVendorTradeReject) Reset()         { *m = MsgCreateVendorTradeReject{} }
func (m *MsgCreateVendorTradeReject) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVendorTradeReject) ProtoMessage()    {}
func (*MsgCreateVendorTradeReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{12}
}
func (m *MsgCreateVendorTradeReject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVendorTradeReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVendorTradeReject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVendorTradeReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVendorTradeReject.Merge(m, src)
}
func (m *MsgCreateVendorTradeReject) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVendorTradeReject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVendorTradeReject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVendorTradeReject proto.InternalMessageInfo

func (m *MsgCreateVendorTradeReject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateVendorTradeReject) GetTradeid() uint64 {
	if m != nil {
		return m.Tradeid
	}
	return 0
}

type MsgCreateVendorTradeRejectResponse struct {
	TradeIndex string `protobuf:"bytes,1,opt,name=tradeIndex,proto3" json:"tradeIndex,omitempty"`
}

func (m *MsgCreateVendorTradeRejectResponse) Reset()         { *m = MsgCreateVendorTradeRejectResponse{} }
func (m *MsgCreateVendorTradeRejectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVendorTradeRejectResponse) ProtoMessage()    {}
func (*MsgCreateVendorTradeRejectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{13}
}
func (m *MsgCreateVendorTradeRejectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVendorTradeRejectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVendorTradeRejectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVendorTradeRejectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVendorTradeRejectResponse.Merge(m, src)
}
func (m *MsgCreateVendorTradeRejectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVendorTradeRejectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVendorTradeRejectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVendorTradeRejectResponse proto.InternalMessageInfo

func (m *MsgCreateVendorTradeRejectResponse) GetTradeIndex() string {
	if m != nil {
		return m.TradeIndex
	}
	return ""
}

type MsgCreateTransporterTradeAccepted struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Tradeid uint64 `protobuf:"varint,2,opt,name=tradeid,proto3" json:"tradeid,omitempty"`
}

func (m *MsgCreateTransporterTradeAccepted) Reset()         { *m = MsgCreateTransporterTradeAccepted{} }
func (m *MsgCreateTransporterTradeAccepted) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransporterTradeAccepted) ProtoMessage()    {}
func (*MsgCreateTransporterTradeAccepted) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{14}
}
func (m *MsgCreateTransporterTradeAccepted) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransporterTradeAccepted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransporterTradeAccepted.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransporterTradeAccepted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransporterTradeAccepted.Merge(m, src)
}
func (m *MsgCreateTransporterTradeAccepted) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransporterTradeAccepted) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransporterTradeAccepted.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransporterTradeAccepted proto.InternalMessageInfo

func (m *MsgCreateTransporterTradeAccepted) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTransporterTradeAccepted) GetTradeid() uint64 {
	if m != nil {
		return m.Tradeid
	}
	return 0
}

type MsgCreateTransporterTradeAcceptedResponse struct {
	TradeIndex string `protobuf:"bytes,1,opt,name=tradeIndex,proto3" json:"tradeIndex,omitempty"`
}

func (m *MsgCreateTransporterTradeAcceptedResponse) Reset() {
	*m = MsgCreateTransporterTradeAcceptedResponse{}
}
func (m *MsgCreateTransporterTradeAcceptedResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgCreateTransporterTradeAcceptedResponse) ProtoMessage() {}
func (*MsgCreateTransporterTradeAcceptedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{15}
}
func (m *MsgCreateTransporterTradeAcceptedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransporterTradeAcceptedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransporterTradeAcceptedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransporterTradeAcceptedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransporterTradeAcceptedResponse.Merge(m, src)
}
func (m *MsgCreateTransporterTradeAcceptedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransporterTradeAcceptedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransporterTradeAcceptedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransporterTradeAcceptedResponse proto.InternalMessageInfo

func (m *MsgCreateTransporterTradeAcceptedResponse) GetTradeIndex() string {
	if m != nil {
		return m.TradeIndex
	}
	return ""
}

type MsgCreateTransporterTradeRejected struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Tradeid uint64 `protobuf:"varint,2,opt,name=tradeid,proto3" json:"tradeid,omitempty"`
}

func (m *MsgCreateTransporterTradeRejected) Reset()         { *m = MsgCreateTransporterTradeRejected{} }
func (m *MsgCreateTransporterTradeRejected) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransporterTradeRejected) ProtoMessage()    {}
func (*MsgCreateTransporterTradeRejected) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{16}
}
func (m *MsgCreateTransporterTradeRejected) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransporterTradeRejected) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransporterTradeRejected.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransporterTradeRejected) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransporterTradeRejected.Merge(m, src)
}
func (m *MsgCreateTransporterTradeRejected) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransporterTradeRejected) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransporterTradeRejected.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransporterTradeRejected proto.InternalMessageInfo

func (m *MsgCreateTransporterTradeRejected) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTransporterTradeRejected) GetTradeid() uint64 {
	if m != nil {
		return m.Tradeid
	}
	return 0
}

type MsgCreateTransporterTradeRejectedResponse struct {
	TradeIndex string `protobuf:"bytes,1,opt,name=tradeIndex,proto3" json:"tradeIndex,omitempty"`
}

func (m *MsgCreateTransporterTradeRejectedResponse) Reset() {
	*m = MsgCreateTransporterTradeRejectedResponse{}
}
func (m *MsgCreateTransporterTradeRejectedResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgCreateTransporterTradeRejectedResponse) ProtoMessage() {}
func (*MsgCreateTransporterTradeRejectedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{17}
}
func (m *MsgCreateTransporterTradeRejectedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransporterTradeRejectedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransporterTradeRejectedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransporterTradeRejectedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransporterTradeRejectedResponse.Merge(m, src)
}
func (m *MsgCreateTransporterTradeRejectedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransporterTradeRejectedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransporterTradeRejectedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransporterTradeRejectedResponse proto.InternalMessageInfo

func (m *MsgCreateTransporterTradeRejectedResponse) GetTradeIndex() string {
	if m != nil {
		return m.TradeIndex
	}
	return ""
}

type MsgCreateTransporterVendorReached struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Tradeid uint64 `protobuf:"varint,2,opt,name=tradeid,proto3" json:"tradeid,omitempty"`
}

func (m *MsgCreateTransporterVendorReached) Reset()         { *m = MsgCreateTransporterVendorReached{} }
func (m *MsgCreateTransporterVendorReached) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransporterVendorReached) ProtoMessage()    {}
func (*MsgCreateTransporterVendorReached) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{18}
}
func (m *MsgCreateTransporterVendorReached) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransporterVendorReached) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransporterVendorReached.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransporterVendorReached) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransporterVendorReached.Merge(m, src)
}
func (m *MsgCreateTransporterVendorReached) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransporterVendorReached) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransporterVendorReached.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransporterVendorReached proto.InternalMessageInfo

func (m *MsgCreateTransporterVendorReached) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTransporterVendorReached) GetTradeid() uint64 {
	if m != nil {
		return m.Tradeid
	}
	return 0
}

type MsgCreateTransporterVendorReachedResponse struct {
	TradeIndex string `protobuf:"bytes,1,opt,name=tradeIndex,proto3" json:"tradeIndex,omitempty"`
}

func (m *MsgCreateTransporterVendorReachedResponse) Reset() {
	*m = MsgCreateTransporterVendorReachedResponse{}
}
func (m *MsgCreateTransporterVendorReachedResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgCreateTransporterVendorReachedResponse) ProtoMessage() {}
func (*MsgCreateTransporterVendorReachedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{19}
}
func (m *MsgCreateTransporterVendorReachedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransporterVendorReachedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransporterVendorReachedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransporterVendorReachedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransporterVendorReachedResponse.Merge(m, src)
}
func (m *MsgCreateTransporterVendorReachedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransporterVendorReachedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransporterVendorReachedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransporterVendorReachedResponse proto.InternalMessageInfo

func (m *MsgCreateTransporterVendorReachedResponse) GetTradeIndex() string {
	if m != nil {
		return m.TradeIndex
	}
	return ""
}

type MsgCreateTransporterPurchaserReached struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Tradeid uint64 `protobuf:"varint,2,opt,name=tradeid,proto3" json:"tradeid,omitempty"`
}

func (m *MsgCreateTransporterPurchaserReached) Reset()         { *m = MsgCreateTransporterPurchaserReached{} }
func (m *MsgCreateTransporterPurchaserReached) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransporterPurchaserReached) ProtoMessage()    {}
func (*MsgCreateTransporterPurchaserReached) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{20}
}
func (m *MsgCreateTransporterPurchaserReached) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransporterPurchaserReached) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransporterPurchaserReached.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransporterPurchaserReached) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransporterPurchaserReached.Merge(m, src)
}
func (m *MsgCreateTransporterPurchaserReached) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransporterPurchaserReached) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransporterPurchaserReached.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransporterPurchaserReached proto.InternalMessageInfo

func (m *MsgCreateTransporterPurchaserReached) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTransporterPurchaserReached) GetTradeid() uint64 {
	if m != nil {
		return m.Tradeid
	}
	return 0
}

type MsgCreateTransporterPurchaserReachedResponse struct {
	TradeIndex string `protobuf:"bytes,1,opt,name=tradeIndex,proto3" json:"tradeIndex,omitempty"`
}

func (m *MsgCreateTransporterPurchaserReachedResponse) Reset() {
	*m = MsgCreateTransporterPurchaserReachedResponse{}
}
func (m *MsgCreateTransporterPurchaserReachedResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgCreateTransporterPurchaserReachedResponse) ProtoMessage() {}
func (*MsgCreateTransporterPurchaserReachedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4dce187579a9d54, []int{21}
}
func (m *MsgCreateTransporterPurchaserReachedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransporterPurchaserReachedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransporterPurchaserReachedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransporterPurchaserReachedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransporterPurchaserReachedResponse.Merge(m, src)
}
func (m *MsgCreateTransporterPurchaserReachedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransporterPurchaserReachedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransporterPurchaserReachedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransporterPurchaserReachedResponse proto.InternalMessageInfo

func (m *MsgCreateTransporterPurchaserReachedResponse) GetTradeIndex() string {
	if m != nil {
		return m.TradeIndex
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "logisticsbeta.logisticsbeta.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "logisticsbeta.logisticsbeta.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgCreateVendor)(nil), "logisticsbeta.logisticsbeta.MsgCreateVendor")
	proto.RegisterType((*MsgCreateVendorResponse)(nil), "logisticsbeta.logisticsbeta.MsgCreateVendorResponse")
	proto.RegisterType((*MsgCreatePurchaser)(nil), "logisticsbeta.logisticsbeta.MsgCreatePurchaser")
	proto.RegisterType((*MsgCreatePurchaserResponse)(nil), "logisticsbeta.logisticsbeta.MsgCreatePurchaserResponse")
	proto.RegisterType((*MsgCreateTransporter)(nil), "logisticsbeta.logisticsbeta.MsgCreateTransporter")
	proto.RegisterType((*MsgCreateTransporterResponse)(nil), "logisticsbeta.logisticsbeta.MsgCreateTransporterResponse")
	proto.RegisterType((*MsgCreateTrade)(nil), "logisticsbeta.logisticsbeta.MsgCreateTrade")
	proto.RegisterType((*MsgCreateTradeResponse)(nil), "logisticsbeta.logisticsbeta.MsgCreateTradeResponse")
	proto.RegisterType((*MsgCreateVendorTradeAccept)(nil), "logisticsbeta.logisticsbeta.MsgCreateVendorTradeAccept")
	proto.RegisterType((*MsgCreateVendorTradeAcceptResponse)(nil), "logisticsbeta.logisticsbeta.MsgCreateVendorTradeAcceptResponse")
	proto.RegisterType((*MsgCreateVendorTradeReject)(nil), "logisticsbeta.logisticsbeta.MsgCreateVendorTradeReject")
	proto.RegisterType((*MsgCreateVendorTradeRejectResponse)(nil), "logisticsbeta.logisticsbeta.MsgCreateVendorTradeRejectResponse")
	proto.RegisterType((*MsgCreateTransporterTradeAccepted)(nil), "logisticsbeta.logisticsbeta.MsgCreateTransporterTradeAccepted")
	proto.RegisterType((*MsgCreateTransporterTradeAcceptedResponse)(nil), "logisticsbeta.logisticsbeta.MsgCreateTransporterTradeAcceptedResponse")
	proto.RegisterType((*MsgCreateTransporterTradeRejected)(nil), "logisticsbeta.logisticsbeta.MsgCreateTransporterTradeRejected")
	proto.RegisterType((*MsgCreateTransporterTradeRejectedResponse)(nil), "logisticsbeta.logisticsbeta.MsgCreateTransporterTradeRejectedResponse")
	proto.RegisterType((*MsgCreateTransporterVendorReached)(nil), "logisticsbeta.logisticsbeta.MsgCreateTransporterVendorReached")
	proto.RegisterType((*MsgCreateTransporterVendorReachedResponse)(nil), "logisticsbeta.logisticsbeta.MsgCreateTransporterVendorReachedResponse")
	proto.RegisterType((*MsgCreateTransporterPurchaserReached)(nil), "logisticsbeta.logisticsbeta.MsgCreateTransporterPurchaserReached")
	proto.RegisterType((*MsgCreateTransporterPurchaserReachedResponse)(nil), "logisticsbeta.logisticsbeta.MsgCreateTransporterPurchaserReachedResponse")
}

func init() {
	proto.RegisterFile("logisticsbeta/logisticsbeta/tx.proto", fileDescriptor_e4dce187579a9d54)
}

var fileDescriptor_e4dce187579a9d54 = []byte{
	// 899 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x97, 0x41, 0x6f, 0xe3, 0x44,
	0x14, 0xc7, 0xe3, 0x6e, 0xb6, 0xdd, 0xbc, 0x44, 0xbb, 0xd4, 0xaa, 0xa8, 0xd7, 0xac, 0x4c, 0xd6,
	0xac, 0x50, 0x09, 0xdd, 0x44, 0xbb, 0x8b, 0x28, 0x14, 0x09, 0x68, 0x40, 0x95, 0x0a, 0x6a, 0x55,
	0x5c, 0x40, 0x15, 0x42, 0x45, 0xae, 0x3d, 0x75, 0x8c, 0x6a, 0x8f, 0x65, 0x4f, 0xab, 0x54, 0x5c,
	0x80, 0x23, 0x27, 0x24, 0xbe, 0x44, 0x8f, 0x45, 0xe2, 0xc4, 0x17, 0xa0, 0xc7, 0x0a, 0x2e, 0x9c,
	0x10, 0x6a, 0x0f, 0xfd, 0x1a, 0x2b, 0x7b, 0xec, 0xc9, 0xd8, 0x49, 0x13, 0x3b, 0x49, 0x2f, 0x6d,
	0xe6, 0x3f, 0xef, 0xfd, 0xdf, 0x6f, 0x66, 0x6c, 0x3f, 0x1b, 0x9e, 0x1c, 0x62, 0xcb, 0x0e, 0x88,
	0x6d, 0x04, 0xfb, 0x88, 0xe8, 0xad, 0xf4, 0x88, 0x74, 0x9b, 0x9e, 0x8f, 0x09, 0x16, 0x5f, 0x4b,
	0xe9, 0xcd, 0xd4, 0x48, 0x9e, 0xd7, 0x1d, 0xdb, 0xc5, 0xad, 0xe8, 0x2f, 0x8d, 0x97, 0x17, 0x0d,
	0x1c, 0x38, 0x38, 0x68, 0x39, 0x81, 0xd5, 0x3a, 0x7e, 0x16, 0xfe, 0x8b, 0x27, 0x1e, 0xd2, 0x89,
	0xef, 0xa2, 0x51, 0x8b, 0x0e, 0xe2, 0xa9, 0x05, 0x0b, 0x5b, 0x98, 0xea, 0xe1, 0xaf, 0x58, 0x5d,
	0x1a, 0xc6, 0xe7, 0xe9, 0xbe, 0xee, 0xc4, 0xf9, 0xea, 0x3f, 0x02, 0x3c, 0xd8, 0x0c, 0xac, 0xaf,
	0x3c, 0x53, 0x27, 0x68, 0x3b, 0x9a, 0x11, 0xdf, 0x85, 0x8a, 0x7e, 0x44, 0x3a, 0xd8, 0xb7, 0xc9,
	0x89, 0x24, 0xd4, 0x85, 0xa5, 0x4a, 0x5b, 0xfa, 0xfb, 0x8f, 0xa7, 0x0b, 0x71, 0xe1, 0x35, 0xd3,
	0xf4, 0x51, 0x10, 0xec, 0x10, 0xdf, 0x76, 0x2d, 0xad, 0x17, 0x2a, 0xae, 0xc3, 0x2c, 0xf5, 0x96,
	0x66, 0xea, 0xc2, 0x52, 0xf5, 0xf9, 0x1b, 0xcd, 0x21, 0x1b, 0xd0, 0xa4, 0xc5, 0xda, 0x95, 0xf3,
	0xff, 0x5e, 0x2f, 0x9d, 0x5e, 0x9f, 0x35, 0x04, 0x2d, 0xce, 0x5e, 0xfd, 0xf8, 0xe7, 0xeb, 0xb3,
	0x46, 0xcf, 0xf7, 0x97, 0xeb, 0xb3, 0xc6, 0xd3, 0xf4, 0x12, 0xba, 0x99, 0x25, 0x65, 0x56, 0xa0,
	0x3e, 0x84, 0xc5, 0x8c, 0xa4, 0xa1, 0xc0, 0xc3, 0x6e, 0x80, 0x54, 0x27, 0x5a, 0xef, 0x27, 0x3e,
	0xd2, 0x09, 0xfa, 0x1a, 0xb9, 0x26, 0xf6, 0x45, 0x09, 0xe6, 0x8c, 0x70, 0x8c, 0x7d, 0xba, 0x5a,
	0x2d, 0x19, 0x8a, 0x22, 0x94, 0x5d, 0xdd, 0x41, 0xd1, 0x7a, 0x2a, 0x5a, 0xf4, 0x5b, 0x54, 0x00,
	0xf0, 0xc1, 0x81, 0xd1, 0xd1, 0x6d, 0xd7, 0x36, 0xa5, 0x3b, 0xd1, 0x0c, 0xa7, 0xac, 0xd6, 0x42,
	0xfa, 0xc4, 0x41, 0xfd, 0x20, 0x22, 0xe1, 0xcb, 0x25, 0x24, 0x62, 0x1d, 0xaa, 0xc7, 0x91, 0xb2,
	0xe1, 0x9a, 0xa8, 0x1b, 0x97, 0xe6, 0x25, 0xf5, 0x5b, 0x10, 0x59, 0xf2, 0xf6, 0x91, 0x6f, 0x74,
	0xf4, 0x00, 0x0d, 0xc3, 0x4d, 0xa3, 0xcd, 0x8c, 0x40, 0xfb, 0x14, 0xe4, 0x7e, 0x77, 0x46, 0xf7,
	0x26, 0xdc, 0xf7, 0x12, 0x91, 0x07, 0xcc, 0xa8, 0xea, 0x1e, 0x2c, 0x30, 0x97, 0x2f, 0x7d, 0xdd,
	0x0d, 0x3c, 0xec, 0x93, 0x29, 0x52, 0x7e, 0x06, 0x8f, 0x06, 0xf9, 0x33, 0xce, 0x06, 0xbc, 0x42,
	0x7a, 0x32, 0x4f, 0xda, 0xa7, 0xab, 0x7f, 0xce, 0xc0, 0x7d, 0xde, 0xcc, 0x44, 0x43, 0x30, 0xeb,
	0x50, 0x65, 0x4b, 0x8d, 0x39, 0xcb, 0x1a, 0x2f, 0x89, 0x32, 0xdc, 0xa3, 0xa7, 0x15, 0x5f, 0x07,
	0x65, 0x8d, 0x8d, 0xc5, 0x47, 0x50, 0x31, 0xb0, 0xe3, 0x60, 0x33, 0xbc, 0x87, 0xca, 0x91, 0x73,
	0x4f, 0x10, 0x97, 0x61, 0x9e, 0x19, 0x1d, 0x62, 0x43, 0x27, 0x36, 0x76, 0xa5, 0xbb, 0x51, 0x54,
	0xff, 0x44, 0x78, 0x14, 0xd4, 0x97, 0x85, 0xce, 0xd2, 0xa3, 0x48, 0xab, 0x61, 0x1c, 0x2b, 0xe1,
	0xf9, 0xb6, 0x81, 0xa4, 0xb9, 0x88, 0x2a, 0xa3, 0x86, 0x71, 0x6c, 0x6b, 0x68, 0xdc, 0x3d, 0x1a,
	0x97, 0x56, 0x33, 0x07, 0xf1, 0x1e, 0xbc, 0x9a, 0xde, 0x3b, 0x76, 0x04, 0x0a, 0x00, 0x09, 0x05,
	0x7e, 0xf3, 0x39, 0x45, 0xdd, 0xe3, 0x2e, 0x34, 0x7a, 0x0f, 0x44, 0xf9, 0x6b, 0x86, 0x81, 0x3c,
	0x32, 0xe4, 0x04, 0x24, 0x98, 0x8b, 0x5c, 0xd8, 0xee, 0x27, 0xc3, 0xbe, 0x0b, 0x59, 0xbd, 0xd9,
	0x7f, 0x52, 0x4a, 0x0d, 0x7d, 0x8f, 0x8c, 0x5b, 0xa4, 0xa4, 0xfe, 0xb9, 0x29, 0x11, 0x3c, 0x1e,
	0x74, 0x3b, 0x70, 0x0b, 0x46, 0xe6, 0x14, 0x60, 0x3f, 0x87, 0xb7, 0x46, 0x96, 0x99, 0x0a, 0x33,
	0x5d, 0xfe, 0xad, 0x33, 0x27, 0x65, 0x26, 0x65, 0x4e, 0x1e, 0xe1, 0xba, 0xd1, 0xb9, 0x4d, 0xe6,
	0x54, 0x99, 0xdc, 0xcc, 0x1d, 0x78, 0x32, 0xc8, 0x8c, 0x7b, 0xb6, 0x4f, 0x0b, 0x7b, 0x0b, 0x96,
	0xf3, 0x54, 0xca, 0x4b, 0xfe, 0xfc, 0xaf, 0x1a, 0xdc, 0xd9, 0x0c, 0x2c, 0xd1, 0x87, 0x5a, 0xea,
	0x4d, 0x64, 0x79, 0xe8, 0x1b, 0x44, 0xa6, 0xc5, 0xcb, 0xef, 0x14, 0x89, 0x66, 0x6c, 0x3e, 0xd4,
	0x52, 0x6f, 0x03, 0x23, 0x6b, 0xf2, 0xd1, 0xa3, 0x6b, 0x0e, 0x6c, 0xfd, 0x3f, 0xc0, 0x83, 0x6c,
	0x57, 0x6f, 0xe5, 0x33, 0x62, 0x09, 0xf2, 0x4a, 0xc1, 0x04, 0x56, 0xfc, 0x27, 0x01, 0xe6, 0xfb,
	0xfb, 0xf5, 0xb3, 0x7c, 0x76, 0x5c, 0x8a, 0xfc, 0x7e, 0xe1, 0x14, 0xc6, 0x80, 0xa1, 0xca, 0x77,
	0xe1, 0xb7, 0x73, 0x3b, 0x99, 0x48, 0x7e, 0x51, 0x20, 0x98, 0x15, 0xfc, 0x4d, 0x80, 0xc5, 0x9b,
	0x3a, 0xd0, 0x4a, 0x91, 0x33, 0xe4, 0x12, 0xe5, 0x8f, 0xc6, 0x4c, 0x1c, 0x4e, 0x15, 0x77, 0x9c,
	0xe2, 0x54, 0x34, 0x71, 0x0c, 0xaa, 0x4c, 0x0f, 0x3a, 0x15, 0x40, 0x19, 0xd1, 0x61, 0x3e, 0x2c,
	0x7c, 0xf4, 0xa9, 0x7c, 0x79, 0x7d, 0xb2, 0xfc, 0x1c, 0xa8, 0xac, 0xb1, 0x8c, 0x89, 0x9a, 0xe4,
	0x8f, 0x8b, 0xda, 0xd7, 0x71, 0x06, 0xa2, 0xa6, 0xfb, 0x49, 0x71, 0xd4, 0x54, 0xfe, 0x18, 0xa8,
	0x83, 0x1b, 0xcd, 0xef, 0x02, 0x3c, 0x1e, 0xdd, 0x46, 0xd6, 0x0a, 0x57, 0xcb, 0x5a, 0xc8, 0x1b,
	0x13, 0x5b, 0x24, 0xcc, 0xf2, 0xdd, 0x1f, 0xc3, 0x6f, 0xc8, 0xf6, 0x17, 0xe7, 0x97, 0x8a, 0x70,
	0x71, 0xa9, 0x08, 0xff, 0x5f, 0x2a, 0xc2, 0xaf, 0x57, 0x4a, 0xe9, 0xe2, 0x4a, 0x29, 0xfd, 0x7b,
	0xa5, 0x94, 0xbe, 0x59, 0xb1, 0x6c, 0xd2, 0x39, 0xda, 0x6f, 0x1a, 0xd8, 0x69, 0xed, 0x76, 0x77,
	0xb6, 0xec, 0xed, 0xee, 0x6e, 0xef, 0x33, 0xb2, 0x3d, 0xe8, 0xb3, 0x92, 0x9c, 0x78, 0x28, 0xd8,
	0x9f, 0x8d, 0xbe, 0x94, 0x5f, 0xbc, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x47, 0x02, 0x1a, 0x2d, 0xf5,
	0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	CreateVendor(ctx context.Context, in *MsgCreateVendor, opts ...grpc.CallOption) (*MsgCreateVendorResponse, error)
	CreatePurchaser(ctx context.Context, in *MsgCreatePurchaser, opts ...grpc.CallOption) (*MsgCreatePurchaserResponse, error)
	CreateTransporter(ctx context.Context, in *MsgCreateTransporter, opts ...grpc.CallOption) (*MsgCreateTransporterResponse, error)
	CreateTrade(ctx context.Context, in *MsgCreateTrade, opts ...grpc.CallOption) (*MsgCreateTradeResponse, error)
	CreateVendorTradeAccept(ctx context.Context, in *MsgCreateVendorTradeAccept, opts ...grpc.CallOption) (*MsgCreateVendorTradeAcceptResponse, error)
	CreateVendorTradeReject(ctx context.Context, in *MsgCreateVendorTradeReject, opts ...grpc.CallOption) (*MsgCreateVendorTradeRejectResponse, error)
	CreateTransporterTradeAccepted(ctx context.Context, in *MsgCreateTransporterTradeAccepted, opts ...grpc.CallOption) (*MsgCreateTransporterTradeAcceptedResponse, error)
	CreateTransporterTradeRejected(ctx context.Context, in *MsgCreateTransporterTradeRejected, opts ...grpc.CallOption) (*MsgCreateTransporterTradeRejectedResponse, error)
	CreateTransporterVendorReached(ctx context.Context, in *MsgCreateTransporterVendorReached, opts ...grpc.CallOption) (*MsgCreateTransporterVendorReachedResponse, error)
	CreateTransporterPurchaserReached(ctx context.Context, in *MsgCreateTransporterPurchaserReached, opts ...grpc.CallOption) (*MsgCreateTransporterPurchaserReachedResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/logisticsbeta.logisticsbeta.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateVendor(ctx context.Context, in *MsgCreateVendor, opts ...grpc.CallOption) (*MsgCreateVendorResponse, error) {
	out := new(MsgCreateVendorResponse)
	err := c.cc.Invoke(ctx, "/logisticsbeta.logisticsbeta.Msg/CreateVendor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePurchaser(ctx context.Context, in *MsgCreatePurchaser, opts ...grpc.CallOption) (*MsgCreatePurchaserResponse, error) {
	out := new(MsgCreatePurchaserResponse)
	err := c.cc.Invoke(ctx, "/logisticsbeta.logisticsbeta.Msg/CreatePurchaser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTransporter(ctx context.Context, in *MsgCreateTransporter, opts ...grpc.CallOption) (*MsgCreateTransporterResponse, error) {
	out := new(MsgCreateTransporterResponse)
	err := c.cc.Invoke(ctx, "/logisticsbeta.logisticsbeta.Msg/CreateTransporter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTrade(ctx context.Context, in *MsgCreateTrade, opts ...grpc.CallOption) (*MsgCreateTradeResponse, error) {
	out := new(MsgCreateTradeResponse)
	err := c.cc.Invoke(ctx, "/logisticsbeta.logisticsbeta.Msg/CreateTrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateVendorTradeAccept(ctx context.Context, in *MsgCreateVendorTradeAccept, opts ...grpc.CallOption) (*MsgCreateVendorTradeAcceptResponse, error) {
	out := new(MsgCreateVendorTradeAcceptResponse)
	err := c.cc.Invoke(ctx, "/logisticsbeta.logisticsbeta.Msg/CreateVendorTradeAccept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateVendorTradeReject(ctx context.Context, in *MsgCreateVendorTradeReject, opts ...grpc.CallOption) (*MsgCreateVendorTradeRejectResponse, error) {
	out := new(MsgCreateVendorTradeRejectResponse)
	err := c.cc.Invoke(ctx, "/logisticsbeta.logisticsbeta.Msg/CreateVendorTradeReject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTransporterTradeAccepted(ctx context.Context, in *MsgCreateTransporterTradeAccepted, opts ...grpc.CallOption) (*MsgCreateTransporterTradeAcceptedResponse, error) {
	out := new(MsgCreateTransporterTradeAcceptedResponse)
	err := c.cc.Invoke(ctx, "/logisticsbeta.logisticsbeta.Msg/CreateTransporterTradeAccepted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTransporterTradeRejected(ctx context.Context, in *MsgCreateTransporterTradeRejected, opts ...grpc.CallOption) (*MsgCreateTransporterTradeRejectedResponse, error) {
	out := new(MsgCreateTransporterTradeRejectedResponse)
	err := c.cc.Invoke(ctx, "/logisticsbeta.logisticsbeta.Msg/CreateTransporterTradeRejected", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTransporterVendorReached(ctx context.Context, in *MsgCreateTransporterVendorReached, opts ...grpc.CallOption) (*MsgCreateTransporterVendorReachedResponse, error) {
	out := new(MsgCreateTransporterVendorReachedResponse)
	err := c.cc.Invoke(ctx, "/logisticsbeta.logisticsbeta.Msg/CreateTransporterVendorReached", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTransporterPurchaserReached(ctx context.Context, in *MsgCreateTransporterPurchaserReached, opts ...grpc.CallOption) (*MsgCreateTransporterPurchaserReachedResponse, error) {
	out := new(MsgCreateTransporterPurchaserReachedResponse)
	err := c.cc.Invoke(ctx, "/logisticsbeta.logisticsbeta.Msg/CreateTransporterPurchaserReached", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	CreateVendor(context.Context, *MsgCreateVendor) (*MsgCreateVendorResponse, error)
	CreatePurchaser(context.Context, *MsgCreatePurchaser) (*MsgCreatePurchaserResponse, error)
	CreateTransporter(context.Context, *MsgCreateTransporter) (*MsgCreateTransporterResponse, error)
	CreateTrade(context.Context, *MsgCreateTrade) (*MsgCreateTradeResponse, error)
	CreateVendorTradeAccept(context.Context, *MsgCreateVendorTradeAccept) (*MsgCreateVendorTradeAcceptResponse, error)
	CreateVendorTradeReject(context.Context, *MsgCreateVendorTradeReject) (*MsgCreateVendorTradeRejectResponse, error)
	CreateTransporterTradeAccepted(context.Context, *MsgCreateTransporterTradeAccepted) (*MsgCreateTransporterTradeAcceptedResponse, error)
	CreateTransporterTradeRejected(context.Context, *MsgCreateTransporterTradeRejected) (*MsgCreateTransporterTradeRejectedResponse, error)
	CreateTransporterVendorReached(context.Context, *MsgCreateTransporterVendorReached) (*MsgCreateTransporterVendorReachedResponse, error)
	CreateTransporterPurchaserReached(context.Context, *MsgCreateTransporterPurchaserReached) (*MsgCreateTransporterPurchaserReachedResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) CreateVendor(ctx context.Context, req *MsgCreateVendor) (*MsgCreateVendorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVendor not implemented")
}
func (*UnimplementedMsgServer) CreatePurchaser(ctx context.Context, req *MsgCreatePurchaser) (*MsgCreatePurchaserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePurchaser not implemented")
}
func (*UnimplementedMsgServer) CreateTransporter(ctx context.Context, req *MsgCreateTransporter) (*MsgCreateTransporterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransporter not implemented")
}
func (*UnimplementedMsgServer) CreateTrade(ctx context.Context, req *MsgCreateTrade) (*MsgCreateTradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTrade not implemented")
}
func (*UnimplementedMsgServer) CreateVendorTradeAccept(ctx context.Context, req *MsgCreateVendorTradeAccept) (*MsgCreateVendorTradeAcceptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVendorTradeAccept not implemented")
}
func (*UnimplementedMsgServer) CreateVendorTradeReject(ctx context.Context, req *MsgCreateVendorTradeReject) (*MsgCreateVendorTradeRejectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVendorTradeReject not implemented")
}
func (*UnimplementedMsgServer) CreateTransporterTradeAccepted(ctx context.Context, req *MsgCreateTransporterTradeAccepted) (*MsgCreateTransporterTradeAcceptedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransporterTradeAccepted not implemented")
}
func (*UnimplementedMsgServer) CreateTransporterTradeRejected(ctx context.Context, req *MsgCreateTransporterTradeRejected) (*MsgCreateTransporterTradeRejectedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransporterTradeRejected not implemented")
}
func (*UnimplementedMsgServer) CreateTransporterVendorReached(ctx context.Context, req *MsgCreateTransporterVendorReached) (*MsgCreateTransporterVendorReachedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransporterVendorReached not implemented")
}
func (*UnimplementedMsgServer) CreateTransporterPurchaserReached(ctx context.Context, req *MsgCreateTransporterPurchaserReached) (*MsgCreateTransporterPurchaserReachedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransporterPurchaserReached not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logisticsbeta.logisticsbeta.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateVendor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateVendor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateVendor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logisticsbeta.logisticsbeta.Msg/CreateVendor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateVendor(ctx, req.(*MsgCreateVendor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePurchaser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePurchaser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePurchaser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logisticsbeta.logisticsbeta.Msg/CreatePurchaser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePurchaser(ctx, req.(*MsgCreatePurchaser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTransporter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTransporter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTransporter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logisticsbeta.logisticsbeta.Msg/CreateTransporter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTransporter(ctx, req.(*MsgCreateTransporter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTrade)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logisticsbeta.logisticsbeta.Msg/CreateTrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTrade(ctx, req.(*MsgCreateTrade))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateVendorTradeAccept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateVendorTradeAccept)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateVendorTradeAccept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logisticsbeta.logisticsbeta.Msg/CreateVendorTradeAccept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateVendorTradeAccept(ctx, req.(*MsgCreateVendorTradeAccept))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateVendorTradeReject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateVendorTradeReject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateVendorTradeReject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logisticsbeta.logisticsbeta.Msg/CreateVendorTradeReject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateVendorTradeReject(ctx, req.(*MsgCreateVendorTradeReject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTransporterTradeAccepted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTransporterTradeAccepted)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTransporterTradeAccepted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logisticsbeta.logisticsbeta.Msg/CreateTransporterTradeAccepted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTransporterTradeAccepted(ctx, req.(*MsgCreateTransporterTradeAccepted))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTransporterTradeRejected_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTransporterTradeRejected)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTransporterTradeRejected(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logisticsbeta.logisticsbeta.Msg/CreateTransporterTradeRejected",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTransporterTradeRejected(ctx, req.(*MsgCreateTransporterTradeRejected))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTransporterVendorReached_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTransporterVendorReached)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTransporterVendorReached(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logisticsbeta.logisticsbeta.Msg/CreateTransporterVendorReached",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTransporterVendorReached(ctx, req.(*MsgCreateTransporterVendorReached))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTransporterPurchaserReached_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTransporterPurchaserReached)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTransporterPurchaserReached(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logisticsbeta.logisticsbeta.Msg/CreateTransporterPurchaserReached",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTransporterPurchaserReached(ctx, req.(*MsgCreateTransporterPurchaserReached))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logisticsbeta.logisticsbeta.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "CreateVendor",
			Handler:    _Msg_CreateVendor_Handler,
		},
		{
			MethodName: "CreatePurchaser",
			Handler:    _Msg_CreatePurchaser_Handler,
		},
		{
			MethodName: "CreateTransporter",
			Handler:    _Msg_CreateTransporter_Handler,
		},
		{
			MethodName: "CreateTrade",
			Handler:    _Msg_CreateTrade_Handler,
		},
		{
			MethodName: "CreateVendorTradeAccept",
			Handler:    _Msg_CreateVendorTradeAccept_Handler,
		},
		{
			MethodName: "CreateVendorTradeReject",
			Handler:    _Msg_CreateVendorTradeReject_Handler,
		},
		{
			MethodName: "CreateTransporterTradeAccepted",
			Handler:    _Msg_CreateTransporterTradeAccepted_Handler,
		},
		{
			MethodName: "CreateTransporterTradeRejected",
			Handler:    _Msg_CreateTransporterTradeRejected_Handler,
		},
		{
			MethodName: "CreateTransporterVendorReached",
			Handler:    _Msg_CreateTransporterVendorReached_Handler,
		},
		{
			MethodName: "CreateTransporterPurchaserReached",
			Handler:    _Msg_CreateTransporterPurchaserReached_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logisticsbeta/logisticsbeta/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateVendor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVendor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVendor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Offchainid) > 0 {
		i -= len(m.Offchainid)
		copy(dAtA[i:], m.Offchainid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Offchainid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateVendorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVendorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVendorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.VendorIndex) > 0 {
		i -= len(m.VendorIndex)
		copy(dAtA[i:], m.VendorIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VendorIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePurchaser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePurchaser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePurchaser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Offchainid) > 0 {
		i -= len(m.Offchainid)
		copy(dAtA[i:], m.Offchainid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Offchainid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePurchaserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePurchaserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePurchaserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PurchaserIndex) > 0 {
		i -= len(m.PurchaserIndex)
		copy(dAtA[i:], m.PurchaserIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PurchaserIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransporter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransporter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransporter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Offchainid) > 0 {
		i -= len(m.Offchainid)
		copy(dAtA[i:], m.Offchainid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Offchainid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransporterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransporterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransporterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TransporterIndex) > 0 {
		i -= len(m.TransporterIndex)
		copy(dAtA[i:], m.TransporterIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TransporterIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTrade) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTrade) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTrade) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Transportprice != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Transportprice))
		i--
		dAtA[i] = 0x40
	}
	if m.Commodityprice != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Commodityprice))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Vendorlocation) > 0 {
		i -= len(m.Vendorlocation)
		copy(dAtA[i:], m.Vendorlocation)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Vendorlocation)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Purchaserlocation) > 0 {
		i -= len(m.Purchaserlocation)
		copy(dAtA[i:], m.Purchaserlocation)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Purchaserlocation)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Commodity) > 0 {
		i -= len(m.Commodity)
		copy(dAtA[i:], m.Commodity)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Commodity)))
		i--
		dAtA[i] = 0x22
	}
	if m.Vendorid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Vendorid))
		i--
		dAtA[i] = 0x18
	}
	if m.Purchaserid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Purchaserid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTradeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTradeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTradeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TradeIndex) > 0 {
		i -= len(m.TradeIndex)
		copy(dAtA[i:], m.TradeIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TradeIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateVendorTradeAccept) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVendorTradeAccept) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVendorTradeAccept) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Tradeid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Tradeid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateVendorTradeAcceptResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVendorTradeAcceptResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVendorTradeAcceptResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TradeIndex) > 0 {
		i -= len(m.TradeIndex)
		copy(dAtA[i:], m.TradeIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TradeIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateVendorTradeReject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVendorTradeReject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVendorTradeReject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Tradeid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Tradeid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateVendorTradeRejectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVendorTradeRejectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVendorTradeRejectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TradeIndex) > 0 {
		i -= len(m.TradeIndex)
		copy(dAtA[i:], m.TradeIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TradeIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransporterTradeAccepted) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransporterTradeAccepted) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransporterTradeAccepted) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Tradeid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Tradeid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransporterTradeAcceptedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransporterTradeAcceptedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransporterTradeAcceptedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TradeIndex) > 0 {
		i -= len(m.TradeIndex)
		copy(dAtA[i:], m.TradeIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TradeIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransporterTradeRejected) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransporterTradeRejected) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransporterTradeRejected) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Tradeid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Tradeid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransporterTradeRejectedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransporterTradeRejectedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransporterTradeRejectedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TradeIndex) > 0 {
		i -= len(m.TradeIndex)
		copy(dAtA[i:], m.TradeIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TradeIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransporterVendorReached) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransporterVendorReached) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransporterVendorReached) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Tradeid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Tradeid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransporterVendorReachedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransporterVendorReachedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransporterVendorReachedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TradeIndex) > 0 {
		i -= len(m.TradeIndex)
		copy(dAtA[i:], m.TradeIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TradeIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransporterPurchaserReached) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransporterPurchaserReached) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransporterPurchaserReached) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Tradeid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Tradeid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransporterPurchaserReachedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransporterPurchaserReachedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransporterPurchaserReachedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TradeIndex) > 0 {
		i -= len(m.TradeIndex)
		copy(dAtA[i:], m.TradeIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TradeIndex)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateVendor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Offchainid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateVendorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.VendorIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePurchaser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Offchainid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePurchaserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PurchaserIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTransporter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Offchainid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTransporterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TransporterIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTrade) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Purchaserid != 0 {
		n += 1 + sovTx(uint64(m.Purchaserid))
	}
	if m.Vendorid != 0 {
		n += 1 + sovTx(uint64(m.Vendorid))
	}
	l = len(m.Commodity)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Purchaserlocation)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Vendorlocation)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Commodityprice != 0 {
		n += 1 + sovTx(uint64(m.Commodityprice))
	}
	if m.Transportprice != 0 {
		n += 1 + sovTx(uint64(m.Transportprice))
	}
	return n
}

func (m *MsgCreateTradeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TradeIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateVendorTradeAccept) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Tradeid != 0 {
		n += 1 + sovTx(uint64(m.Tradeid))
	}
	return n
}

func (m *MsgCreateVendorTradeAcceptResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TradeIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateVendorTradeReject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Tradeid != 0 {
		n += 1 + sovTx(uint64(m.Tradeid))
	}
	return n
}

func (m *MsgCreateVendorTradeRejectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TradeIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTransporterTradeAccepted) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Tradeid != 0 {
		n += 1 + sovTx(uint64(m.Tradeid))
	}
	return n
}

func (m *MsgCreateTransporterTradeAcceptedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TradeIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTransporterTradeRejected) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Tradeid != 0 {
		n += 1 + sovTx(uint64(m.Tradeid))
	}
	return n
}

func (m *MsgCreateTransporterTradeRejectedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TradeIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTransporterVendorReached) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Tradeid != 0 {
		n += 1 + sovTx(uint64(m.Tradeid))
	}
	return n
}

func (m *MsgCreateTransporterVendorReachedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TradeIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTransporterPurchaserReached) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Tradeid != 0 {
		n += 1 + sovTx(uint64(m.Tradeid))
	}
	return n
}

func (m *MsgCreateTransporterPurchaserReachedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TradeIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVendor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVendor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVendor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offchainid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offchainid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVendorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVendorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVendorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VendorIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VendorIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePurchaser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePurchaser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePurchaser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offchainid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offchainid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePurchaserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePurchaserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePurchaserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaserIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PurchaserIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransporter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransporter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransporter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offchainid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offchainid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransporterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransporterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransporterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransporterIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TransporterIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTrade) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTrade: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTrade: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Purchaserid", wireType)
			}
			m.Purchaserid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Purchaserid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vendorid", wireType)
			}
			m.Vendorid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vendorid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commodity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Commodity = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Purchaserlocation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Purchaserlocation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vendorlocation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vendorlocation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commodityprice", wireType)
			}
			m.Commodityprice = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Commodityprice |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Transportprice", wireType)
			}
			m.Transportprice = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Transportprice |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTradeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTradeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTradeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TradeIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TradeIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVendorTradeAccept) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVendorTradeAccept: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVendorTradeAccept: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tradeid", wireType)
			}
			m.Tradeid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Tradeid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVendorTradeAcceptResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVendorTradeAcceptResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVendorTradeAcceptResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TradeIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TradeIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVendorTradeReject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVendorTradeReject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVendorTradeReject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tradeid", wireType)
			}
			m.Tradeid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Tradeid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVendorTradeRejectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVendorTradeRejectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVendorTradeRejectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TradeIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TradeIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransporterTradeAccepted) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransporterTradeAccepted: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransporterTradeAccepted: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tradeid", wireType)
			}
			m.Tradeid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Tradeid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransporterTradeAcceptedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransporterTradeAcceptedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransporterTradeAcceptedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TradeIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TradeIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransporterTradeRejected) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransporterTradeRejected: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransporterTradeRejected: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tradeid", wireType)
			}
			m.Tradeid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Tradeid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransporterTradeRejectedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransporterTradeRejectedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransporterTradeRejectedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TradeIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TradeIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransporterVendorReached) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransporterVendorReached: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransporterVendorReached: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tradeid", wireType)
			}
			m.Tradeid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Tradeid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransporterVendorReachedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransporterVendorReachedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransporterVendorReachedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TradeIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TradeIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransporterPurchaserReached) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransporterPurchaserReached: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransporterPurchaserReached: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tradeid", wireType)
			}
			m.Tradeid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Tradeid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransporterPurchaserReachedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransporterPurchaserReachedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransporterPurchaserReachedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TradeIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TradeIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
