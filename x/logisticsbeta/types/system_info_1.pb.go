// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: logisticsbeta/logisticsbeta/system_info_1.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SystemInfo1 struct {
	NextPurchaser uint64 `protobuf:"varint,1,opt,name=nextPurchaser,proto3" json:"nextPurchaser,omitempty"`
}

func (m *SystemInfo1) Reset()         { *m = SystemInfo1{} }
func (m *SystemInfo1) String() string { return proto.CompactTextString(m) }
func (*SystemInfo1) ProtoMessage()    {}
func (*SystemInfo1) Descriptor() ([]byte, []int) {
	return fileDescriptor_9895b8fd1ac230fd, []int{0}
}
func (m *SystemInfo1) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemInfo1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemInfo1.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemInfo1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemInfo1.Merge(m, src)
}
func (m *SystemInfo1) XXX_Size() int {
	return m.Size()
}
func (m *SystemInfo1) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemInfo1.DiscardUnknown(m)
}

var xxx_messageInfo_SystemInfo1 proto.InternalMessageInfo

func (m *SystemInfo1) GetNextPurchaser() uint64 {
	if m != nil {
		return m.NextPurchaser
	}
	return 0
}

func init() {
	proto.RegisterType((*SystemInfo1)(nil), "logisticsbeta.logisticsbeta.SystemInfo1")
}

func init() {
	proto.RegisterFile("logisticsbeta/logisticsbeta/system_info_1.proto", fileDescriptor_9895b8fd1ac230fd)
}

var fileDescriptor_9895b8fd1ac230fd = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0xcf, 0xc9, 0x4f, 0xcf,
	0x2c, 0x2e, 0xc9, 0x4c, 0x2e, 0x4e, 0x4a, 0x2d, 0x49, 0x44, 0xe3, 0x15, 0x57, 0x16, 0x97, 0xa4,
	0xe6, 0xc6, 0x67, 0xe6, 0xa5, 0xe5, 0xc7, 0x1b, 0xea, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x49,
	0xa3, 0x28, 0xd1, 0x43, 0xe1, 0x29, 0x19, 0x73, 0x71, 0x07, 0x83, 0xf5, 0x78, 0xe6, 0xa5, 0xe5,
	0x1b, 0x0a, 0xa9, 0x70, 0xf1, 0xe6, 0xa5, 0x56, 0x94, 0x04, 0x94, 0x16, 0x25, 0x67, 0x24, 0x16,
	0xa7, 0x16, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x04, 0xa1, 0x0a, 0x3a, 0x05, 0x9e, 0x78, 0x24,
	0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x5c, 0x78,
	0x2c, 0xc7, 0x70, 0xe3, 0xb1, 0x1c, 0x43, 0x94, 0x79, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e,
	0x72, 0x7e, 0xae, 0x7e, 0x44, 0x45, 0xb0, 0x5f, 0x66, 0x40, 0x45, 0x04, 0xc2, 0x89, 0x4e, 0x20,
	0x27, 0x56, 0xa0, 0x39, 0xb9, 0xa4, 0xb2, 0x20, 0xb5, 0x38, 0x89, 0x0d, 0xec, 0x56, 0x63, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x90, 0x58, 0x15, 0x9a, 0xde, 0x00, 0x00, 0x00,
}

func (m *SystemInfo1) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemInfo1) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SystemInfo1) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NextPurchaser != 0 {
		i = encodeVarintSystemInfo_1(dAtA, i, uint64(m.NextPurchaser))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintSystemInfo_1(dAtA []byte, offset int, v uint64) int {
	offset -= sovSystemInfo_1(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SystemInfo1) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NextPurchaser != 0 {
		n += 1 + sovSystemInfo_1(uint64(m.NextPurchaser))
	}
	return n
}

func sovSystemInfo_1(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSystemInfo_1(x uint64) (n int) {
	return sovSystemInfo_1(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SystemInfo1) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSystemInfo_1
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemInfo1: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemInfo1: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextPurchaser", wireType)
			}
			m.NextPurchaser = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSystemInfo_1
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextPurchaser |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSystemInfo_1(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSystemInfo_1
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSystemInfo_1(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSystemInfo_1
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSystemInfo_1
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSystemInfo_1
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSystemInfo_1
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSystemInfo_1
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSystemInfo_1
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSystemInfo_1        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSystemInfo_1          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSystemInfo_1 = fmt.Errorf("proto: unexpected end of group")
)
